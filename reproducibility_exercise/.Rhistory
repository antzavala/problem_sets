knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
options(stringsAsFactors = FALSE)
install.packages(lsr)
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
options(stringsAsFactors = FALSE)
install.packages("lsr")
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
library(lsr)
library(ggthemes)
# Just Study 1
d <- read_excel("data/S1_Subway.xlsx")
# Just Study 1
d <- read_excel("data/S1_Subway.xlsx")
d = d %>%
mutate(
DIRECTION = as.factor(DIRECTION),
STN_NUMBER = as.factor(STN_NUMBER),
STN_NAME = factor(STN_NAME, levels = c("SPAD", "STG", "B-Y", "SHER"))
)
d %>%
group_by("FIXME") %>%
summarize(
num_obs = "FIXME",
.groups = "keep"
) %>%
ungroup()
# Just Study 1
d <- read_excel("data/S1_Subway.xlsx")
d = d %>%
mutate(
DIRECTION = as.factor(DIRECTION),
STN_NUMBER = as.factor(STN_NUMBER),
STN_NAME = factor(STN_NAME, levels = c("SPAD", "STG", "B-Y", "SHER"))
)
## do the same for Spadina
## do the same for Bloor-Yonge
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
"FIXME"
# Just Study 1
d <- read_excel("data/S1_Subway.xlsx")
View(data)
View("data/S1_Subway.xlsx")
d = d %>%
mutate(
DIRECTION = as.factor(DIRECTION),
STN_NUMBER = as.factor(STN_NUMBER),
STN_NAME = factor(STN_NAME, levels = c("SPAD", "STG", "B-Y", "SHER"))
)
d %>%
group_by("FIXME") %>%
summarize(
num_obs = "FIXME",
.groups = "keep"
) %>%
ungroup()
d %>%
group_by("Direction") %>%
summarize(
num_obs = "FIXME",
.groups = "keep"
) %>%
ungroup()
d %>%
group_by("Direction") %>%
summarize(
num_obs = "FIXME",
.groups = "East", "West"
) %>%
ungroup()
d %>%
group_by("Direction") %>%
summarize(
num_obs = "FIXME",
.groups = "East" "West"
d %>%
group_by("Direction") %>%
summarize(
num_obs = "FIXME",
.groups = "East"
) %>%
ungroup()
d %>%
group_by("Direction") %>%
summarize(
num_obs = "FIXME",
.groups = "Fixme"
) %>%
ungroup()
d %>%
group_by("Direction") %>%
summarize(
num_obs = "FIXME",
.groups = "FIXME"
) %>%
ungroup()
mod <- aov(data = d,
formula = DISTANCE ~ "VAR1" + "VAR2" + "VAR1"*"VAR2")
d = d %>%
mutate(
DIRECTION = as.factor(DIRECTION),
STN_NUMBER = as.factor(STN_NUMBER),
STN_NAME = factor(STN_NAME, levels = c("SPAD", "STG", "B-Y", "SHER"))
)
d %>%
group_by("Direction") %>%
summarize(
num_obs = "FIXME",
.groups = "keep"
) %>%
ungroup()
d %>%
group_by("Direction") %>%
summarize(
num_obs = "East",
.groups = "keep"
) %>%
ungroup()
d %>%
group_by("Direction") %>%
summarize(
num_obs = "East", "West",
.groups = "keep"
) %>%
ungroup()
d %>%
group_by("Direction") %>%
summarize(
num_obs = "East" "West",
d %>%
group_by("Direction") %>%
summarize(
num_obs = "East",
.groups = "keep"
) %>%
ungroup()
mod <- aov(data = d,
formula = DISTANCE ~ "DIRECTION" + "DISTANCE" + "STN_NUMBER"*"STN_NAME")
mod <- aov(data = data,
formula = DISTANCE ~ "DIRECTION" + "DISTANCE" + "STN_NUMBER"*"STN_NAME")
mod <- aov(data = d,
formula = DISTANCE ~ "DIRECTION" + "DISTANCE" + "STN_NUMBER"*"STN_NAME")
etaSquared("FIXME")
d = d %>%
mutate(
DIRECTION = as.factor(DIRECTION),
STN_NUMBER = as.factor(STN_NUMBER),
STN_NAME = factor(STN_NAME, levels = c("SPAD", "STG", "B-Y", "SHER"))
)
View(d)
View(d)
View(d)
View(d)
mod <- aov(data = data(),
formula = DISTANCE ~ "DIRECTION" + "DISTANCE" + "STN_NUMBER"*"STN_NAME")
mod <- aov(data = data,
formula = DISTANCE ~ "DIRECTION" + "DISTANCE" + "STN_NUMBER"*"STN_NAME")
mod <- aov(data = d,
formula = DISTANCE ~ "DIRECTION" + "DISTANCE" + "STN_NUMBER"*"STN_NAME")
mod <- aov(data = d,
formula = DISTANCE ~ "DIRECTION" + "EAST" + "STN_NUMBER"*"STN_NAME")
mod <- aov(data = d,
formula = DISTANCE ~ "1" + "2" + "3"*"4")
mod <- aov(data = d,
formula = DISTANCE ~ "DISTANCE" + "2" + "3"*"4")
etaSquared("eta.sq.part")
View("eatSquared")
etaSquared("character")
etaSquared("1")
mod <- aov(data = d,
formula = DISTANCE ~ "DISTANCE" + "2" + "3"*"4")
d %>%
group_by("Direction") %>%
summarize(
num_obs = "East",
.groups = "keep"
) %>%
ungroup()
names(d)
d %>%
group_by("Direction") %>%
summarize(
num_obs = "East",
.groups = "keep"
) %>%
ungroup()
mod <- aov(data = d,
formula = DISTANCE ~ "DIRECTION" + "DISTANCE" + "SIN_NUMBER"*"STN_NAME")
mod <- aov(data = data):,
mod <- aov(data = data),
mod <- aov(data = data)
mod <- aov(data = data),
mod <- aov(data = data,
formula = DISTANCE ~ "DIRECTION" + "DISTANCE" + "SIN_NUMBER"*"STN_NAME")
mod <- aov(data = data,
formula = DISTANCE ~ "DIRECTION" + "DISTANCE" + "SIN_NUMBER"*"STN_NAME")
mod <- aov(data = d,
formula = DISTANCE ~ "DIRECTION" + "DISTANCE" + "SIN_NUMBER"*"STN_NAME")
mod <- aov(data = data,
formula = DISTANCE ~ "DIRECTION" + "DISTANCE" + "SIN_NUMBER"*"STN_NAME")
mod <- aov(data = data,
formula = DISTANCE ~ "DIRECTION" + "DISTANCE" + "SIN_NUMBER"*"STN_NAME")
mod <- aov(data = data,
formula = DISTANCE ~ DIRECTION + DISTANCE + SIN_NUMBER*STN_NAME)
mod <- aov(data = data,
formula = DISTANCE ~ "DIRECTION" + "DISTANCE" + "SIN_NUMBER"*"STN_NAME)
anova(mod)
mod <- aov(data = data,
formula = DISTANCE ~ "$ DIRECTION" + "DISTANCE" + "SIN_NUMBER"*"STN_NAME)
anova(mod)
mod <- aov(data = data,
formula = DISTANCE ~ "DIRECTION" + "DISTANCE" + "SIN_NUMBER"*"STN_NAME)
anova(mod)
mod <- aov(data = d,
formula = DISTANCE ~ DIRECTION + DISTANCE + SIN_NUMBER*STN_NAME)
mod <- aov(data = d,
formula = DISTANCE ~ DIRECTION + DISTANCE + STN_NUMBER*STN_NAME)
anova(mod)
etaSquared(eta.sq.part)
library(effectsize)
etaSquared(mod, partial = TRUE)
etaSquared(mod)
etaSquared(aov)
etaSquared(mod)
etaSquared(DISTANCE)
etaSquared(mod)
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter = (STN_NAME) = "ST George"
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter = (STN_NAME) = ST George
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter = (STN_NAME) = st.george
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter = (STN_NAME) = ST.GEORGE
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter = (STN_NAME) = "ST.GEORGE"
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter(STN_NAME) = "ST.GEORGE"
# STEP 1: filter the data to get only St. George estimates
st.george = d %>% <-
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%<-
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter(STN_NAME) = "ST.GEORGE"
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter(STN_NAME == "ST.GEORGE")
# STEP 2: was the estimated distance to St. George greater for eastbound or westbound travellers?
# no stats needed, just get the mean estimated distance between east and west directions
# Hint: you'll want group_by() and summarize()
st.george %>%
"FIXME"
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter(STN_NAME == "st.george")
# STEP 2: was the estimated distance to St. George greater for eastbound or westbound travellers?
# no stats needed, just get the mean estimated distance between east and west directions
# Hint: you'll want group_by() and summarize()
st.george %>%
"FIXME"
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter(STN_NAME == "st.george")
# STEP 2: was the estimated distance to St. George greater for eastbound or westbound travellers?
# no stats needed, just get the mean estimated distance between east and west directions
# Hint: you'll want group_by() and summarize()
st.george %>%
summarize(east, west)
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
options(stringsAsFactors = FALSE)
install.packages("lsr")
install.packages("effectsize")
d %>%
group_by("Direction") %>%
summarize(
num_obs = "East",
.groups = "keep"
) %>%
ungroup()
mod <- aov(data = d,
formula = DISTANCE ~ DIRECTION + DISTANCE + STN_NUMBER*STN_NAME)
mod <- aov(data = data,
formula = DISTANCE ~ DIRECTION + DISTANCE + STN_NUMBER*STN_NAME)
mod <- aov(data = d,
formula = DISTANCE ~ DIRECTION + DISTANCE + STN_NUMBER*STN_NAME)
d = d %>%
mutate(
DIRECTION = as.factor(DIRECTION),
STN_NUMBER = as.factor(STN_NUMBER),
STN_NAME = factor(STN_NAME, levels = c("", "STG", "B-Y", "SHER"))
)
# Just Study 1
d <- read_excel("data/S1_Subway.xlsx")
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
library(lsr)
library(ggthemes)
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
options(stringsAsFactors = FALSE)
install.packages("lsr")
install.packages("lsr")
# Just Study 1
d <- read_excel("data/S1_Subway.xlsx")
d = d %>%
mutate(
DIRECTION = as.factor(DIRECTION),
STN_NUMBER = as.factor(STN_NUMBER),
STN_NAME = factor(STN_NAME, levels = c("STN", "STG", "B-Y", "SHER"))
)
d %>%
group_by("Direction") %>%
summarize(
num_obs = "East",
.groups = "keep"
) %>%
ungroup()
mod <- aov(data = d,
formula = DISTANCE ~ DIRECTION + DISTANCE + STN_NUMBER*STN_NAME)
anova(mod)
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
"FIXME"
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter == "st.george"
# STEP 2: was the estimated distance to St. George greater for eastbound or westbound travellers?
# no stats needed, just get the mean estimated distance between east and west directions
# Hint: you'll want group_by() and summarize()
st.george %>%
"FIXME"
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter == "st.george"
# STEP 2: was the estimated distance to St. George greater for eastbound or westbound travellers?
# no stats needed, just get the mean estimated distance between east and west directions
# Hint: you'll want group_by() and summarize()
st.george %>%
summarize("st.george")
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter == "st.george"
# STEP 2: was the estimated distance to St. George greater for eastbound or westbound travellers?
# no stats needed, just get the mean estimated distance between east and west directions
# Hint: you'll want group_by() and summarize()
st.george %>%
summarize("east", "west")
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter == "st.george"
# STEP 2: was the estimated distance to St. George greater for eastbound or westbound travellers?
# no stats needed, just get the mean estimated distance between east and west directions
# Hint: you'll want group_by() and summarize()
st.george %>%
summarize("direction")
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter == "st.george"
# STEP 2: was the estimated distance to St. George greater for eastbound or westbound travellers?
# no stats needed, just get the mean estimated distance between east and west directions
# Hint: you'll want group_by() and summarize()
st.george %>%
summarize == "direction"
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter == "st.george"
# STEP 2: was the estimated distance to St. George greater for eastbound or westbound travellers?
# no stats needed, just get the mean estimated distance between east and west directions
# Hint: you'll want group_by() and summarize()
st.george %>%
summarize == "east"
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter == "st.george"
# STEP 2: was the estimated distance to St. George greater for eastbound or westbound travellers?
# no stats needed, just get the mean estimated distance between east and west directions
# Hint: you'll want group_by() and summarize()
st.george %>%
group_by(DIRECTION)
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter == "st.george"
# STEP 2: was the estimated distance to St. George greater for eastbound or westbound travellers?
# no stats needed, just get the mean estimated distance between east and west directions
# Hint: you'll want group_by() and summarize()
st.george %>%
group_by(DIRECTION) %>%
# STEP 3: Now run an aov on St. George data with distance as the response variable and direction as the explanatory variable
st.george.aov = aov(data = st.george, formula = "FIXME")
# STEP 1: filter the data to get only St. George estimates
st.george = d %>%
filter == "st.george"
# STEP 2: was the estimated distance to St. George greater for eastbound or westbound travellers?
# no stats needed, just get the mean estimated distance between east and west directions
# Hint: you'll want group_by() and summarize()
st.george %>%
group_by(DIRECTION) %>%
summarise(mean_distance = mean(DISTANCE, na.rm = TRUE))
